// Created on: 2016-08-18
// Created by: Denis BOGOLEPOV
// Copyright (c) 2013-2016 OPEN CASCADE SAS
//
// This file is part of Open CASCADE Technology software library.
//
// This library is free software; you can redistribute it and/or modify it under
// the terms of the GNU Lesser General Public License version 2.1 as published
// by the Free Software Foundation, with special exception defined in the file
// OCCT_LGPL_EXCEPTION.txt. Consult the file LICENSE_LGPL_21.txt included in OCCT
// distribution for complete text of the license and disclaimer of any warranty.
//
// Alternatively, this file may be used under the terms of Open CASCADE
// commercial license or contractual agreement.

// =======================================================================
// function : EstimateNormal
// purpose  : Estimates surface normal at the given point
// =======================================================================
template<class T, int N>
typename BVH_ImplicitFunction<T, N>::BVH_VecNt BVH_ImplicitFunction<T, N>::EstimateNormal (const BVH_VecNt& thePoint)
{
  BVH_VecNt aNormal;

  for (int aDim = 0; aDim < std::min (N, 3); ++aDim)
  {
    BVH_VecNt aLftOffset (thePoint);
    BVH_VecNt aRghOffset (thePoint);

    aLftOffset[aDim] -= BVH::Precision<T>::Confusion();
    aRghOffset[aDim] += BVH::Precision<T>::Confusion();

    aNormal[aDim] = Calculate (aRghOffset) - Calculate (aLftOffset);
  }

  return aNormal;
}
