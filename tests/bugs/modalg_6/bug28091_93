puts "============"
puts "OCC28091"
puts "============"
puts ""
######################################################
# Crash in Boolean operation in OCCT 6.7.0 version
######################################################

plane pl21jw5 8.35424868893539950000 490.00000000000023000000 19.00000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl21jw5 pl21jw5 5.99345025452302860000 20.29150262212920100000

plane pl22jw1 8.35424868893539950000 65.00000000000029800000 19.00000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl22jw1 pl22jw1 5.99345025452294600000 20.29150262212920100000

plane pl29jw5 28.64575131106460000000 490.00000000000000000000 19.00000000000000700000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl29jw5 pl29jw5 5.99345025452302860000 562.99999999999989000000

plane pl31jw5 28.64575131106460000000 490.00000000000000000000 19.00000000000000700000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl31jw5 pl31jw5 5.99345025452302060000 542.70849737787091000000

plane pl31jw29 591.64575131106449000000 490.00000000000034000000 19.00000000000000000000 -1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00648490735136420060 -0.99997897276724990000
pcylinder cyl31jw29 pl31jw29 5.99345025452303840000 20.29150262212897400000

plane pl35jw1 28.64575131106460000000 65.00000000000000000000 19.00000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl35jw1 pl35jw1 5.99345025452294600000 562.99999999999989000000

plane pl37jw1 28.64575131106460000000 65.00000000000000000000 19.00000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl37jw1 pl37jw1 5.99345025452294600000 542.70849737787091000000

plane pl37jw35 591.64575131106449000000 65.00000000000118000000 19.00000000000000400000 -1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00648490735120551590 -0.99997897276725090000
pcylinder cyl37jw35 pl37jw35 5.99345025452294600000 20.29150262212897400000

plane pl43jw19 10.00000000000000000000 277.50000000000000000000 19.00000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl43jw19 pl43jw19 4.99999957999999990000 580.00000000000000000000

plane pl45jw15 10.00000000000000000000 39.99999999999999300000 19.00000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 -0.00000000000000000000 0.00000000000000142109 1.00000000000000000000
pcylinder cyl45jw15 pl45jw15 4.99999957999999720000 580.00000000000000000000

plane pl47jw17 10.00000000000000000000 515.00000000000000000000 19.00000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000
pcylinder cyl47jw17 pl47jw17 4.99999957999999990000 580.00000000000000000000

binrestore [locate_data_file bug28091_Platte_mit_Minifix.brep] sh

compound CmpdSrcFList

foreach ff [ explode sh f ] {
  settolerance $ff 1.0e-7
  fixshape rf $ff
  add rf CmpdSrcFList
}

puts ""
puts ""

foreach x {cyl21jw5 cyl22jw1 cyl29jw5 cyl31jw5 cyl31jw29 cyl35jw1 cyl37jw1 cyl37jw35 cyl43jw19 cyl45jw15 cyl47jw17} {
  copy CmpdSrcFList sshape
  foreach cyf [explode ${x} f] {
    mksurface sf $cyf;
    if { [ string first "Cylindr" [ dump sf ] ]  >= 0 } {
      bsection rs${x} sshape $cyf -n2d -na
      break
    }
  }
}

# The true number of entities is not important.
# The main idea is to check if:
#   1. The result (r*) is empty or not.
#   2. new interfered entities are found or
#       if some interferences are not detected but was
#       detected earlier.
#
# Changes in behavior at least in one item must be considered (most likely)
# as regression.

checknbshapes rscyl21jw5 -vertex 0
checknbshapes rscyl22jw1 -vertex 0
checknbshapes rscyl29jw5 -vertex 4
checknbshapes rscyl31jw5 -vertex 4
checknbshapes rscyl31jw29 -vertex 0
checknbshapes rscyl35jw1 -vertex 4
checknbshapes rscyl37jw1 -vertex 4
checknbshapes rscyl37jw35 -vertex 0
checknbshapes rscyl43jw19 -vertex 3
checknbshapes rscyl45jw15 -vertex 3
checknbshapes rscyl47jw17 -vertex 3