puts "============"
puts "OCC28091"
puts "============"
puts ""
######################################################
# Crash in Boolean operation in OCCT 6.7.0 version
######################################################

plane pl11 10.08401639903191300000 20.59607727749106900000 99.24525646557512500000 0.00000000000000000000 0.00000000000000000000 -1.00000000000000000000 0.51367713933409975000 0.85798356425139977000 0.00000000000000000000
pcylinder cyl11 pl11 1.47068174613069420000 87.34886697038462000000

plane pl12 10.08401639903191300000 20.59607727749106900000 5.32430342193345040000 0.00000000000000000000 0.00000000000000000000 -1.00000000000000000000 0.51367713933409975000 0.85798356425139977000 0.00000000000000000000
pcylinder cyl12 pl12 1.47068174613069420000 87.34886697038462000000

plane pl21 10.08401639903186400000 20.59607727749110900000 106.34886697038462000000 0.00000000000000000000 0.00000000000000000000 -1.00000000000000000000 -0.58123819371909413000 0.81373347120673667000 0.00000000000000000000
pcylinder cyl21 pl21 3.32307248324710480000 87.34886697038462000000

plane pl22 10.08401639903186400000 20.59607727749110900000 11.89638949519049900000 0.00000000000000000000 0.00000000000000000000 -1.00000000000000000000 -0.58123819371909413000 0.81373347120673667000 0.00000000000000000000
pcylinder cyl22 pl22 3.32307248324710480000 87.34886697038462000000

binrestore [locate_data_file bug28091_stufenbohrung.brep] sh

compound CmpdSrcFList

foreach ff [ explode sh f ] {
  settolerance $ff 1.0e-7
  fixshape rf $ff
  add rf CmpdSrcFList
}

puts ""
puts ""

set i 0
foreach x {1 2 3 4 5 6 7 8} {
  incr i
  
  copy CmpdSrcFList sshape
  foreach cyf [explode cyl${x}1 f] {
    mksurface sf $cyf;
    if { [ string first "Cylindr" [ dump sf ] ]  >= 0 } {
      bsection r${i}1 sshape $cyf -n2d -na
      break
    }
  }
  
  copy CmpdSrcFList sshape
  foreach cyf [explode cyl${x}2 f] {
    mksurface sf $cyf;
    if { [ string first "Cylindr" [ dump sf ] ]  >= 0 } {
      bsection r${i}2 sshape $cyf -n2d -na
      break
    }
  }
}

# The true number of entities is not important.
# The main idea is to check if:
#   1. The result (r*) is empty or not.
#   2. new interfered entities are found or
#       if some interferences are not detected but was
#       detected earlier.
#
# Changes in behavior at least in one item must be considered (most likely)
# as regression.

checknbshapes r11 -vertex 0
checknbshapes r12 -vertex 2
checknbshapes r21 -vertex 0
checknbshapes r22 -vertex 1