puts "============"
puts "OCC28091"
puts "============"
puts ""
######################################################
# Crash in Boolean operation in OCCT 6.7.0 version
######################################################

plane pl11 -293.98408372464161000000 187.50000000000000000000 28.25000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 -1.00000000000000000000
pcylinder cyl11 pl11 3.24971557614911790000 293.98408372464166000000

plane pl12 56.50000000000003600000 187.50000000000000000000 28.25000000000000000000 1.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 0.00000000000000000000 -1.00000000000000000000
pcylinder cyl12 pl12 3.24971557614911790000 293.98408372464166000000

plane pl21 22.00000000000003600000 220.00000000000000000000 -293.98408372464166000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000 1.00000000000000000000 0.00000000000000000000 -0.00000000000000000000
pcylinder cyl21 pl21 3.24971556307843730000 293.98408372464166000000

plane pl22 22.00000000000003600000 220.00000000000000000000 56.50000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000 1.00000000000000000000 0.00000000000000000000 -0.00000000000000000000
pcylinder cyl22 pl22 3.24971556307843730000 293.98408372464166000000

plane pl31 34.50000000000003600000 155.00000000000000000000 -293.98408372464166000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000 1.00000000000000000000 0.00000000000000000000 -0.00000000000000000000
pcylinder cyl31 pl31 3.24971556312831480000 293.98408372464166000000

plane pl32 34.50000000000003600000 155.00000000000000000000 56.50000000000000000000 0.00000000000000000000 0.00000000000000000000 1.00000000000000000000 1.00000000000000000000 0.00000000000000000000 -0.00000000000000000000
pcylinder cyl32 pl32 3.24971556312831480000 293.98408372464166000000

binrestore [locate_data_file bug28091_LG3.brep] sh

compound CmpdSrcFList

foreach ff [ explode sh f ] {
  settolerance $ff 1.0e-7
  fixshape rf $ff
  add rf CmpdSrcFList
}

puts ""
puts ""

set i 0
foreach x {1 2 3} {
  incr i
  
  copy CmpdSrcFList sshape
  foreach cyf [explode cyl${x}1 f] {
    mksurface sf $cyf;
    if { [ string first "Cylindr" [ dump sf ] ]  >= 0 } {
      bsection r${i}1 sshape $cyf -n2d -na
      break
    }
  }
  
  copy CmpdSrcFList sshape
  foreach cyf [explode cyl${x}2 f] {
    mksurface sf $cyf;
    if { [ string first "Cylindr" [ dump sf ] ]  >= 0 } {
      bsection r${i}2 sshape $cyf -n2d -na
      break
    }
  }
}

# The true number of entities is not important.
# The main idea is to check if:
#   1. The result (r*) is empty or not.
#   2. new interfered entities are found or
#       if some interferences are not detected but was
#       detected earlier.
#
# Changes in behavior at least in one item must be considered (most likely)
# as regression.

checknbshapes r11 -vertex 0
checknbshapes r12 -vertex 0
checknbshapes r21 -vertex 0
checknbshapes r22 -vertex 0
checknbshapes r31 -vertex 0
checknbshapes r32 -vertex 0