# Set flag dump_file to 1 in order to regenerate script files with actual data
# used as reference. In this mode all tests intentionaly report failure. 
set dump_file 0
########################################################################
set mist 0;
# Kinematic Mechanism
set nbMechanism_First 0; set nbMechanism_Second 0;
# Kinematic Links
set nbLink_First 0; set nbLink_Second 0;
set nbRefShape_First 0; set nbRefShape_Second 0;
# Kinematic Pairs
set nbLowPair_First 0; set nbLowPair_Second 0;
set nbLowPairWthMotCoupl_First 0; set nbLowPairWthMotCoupl_Second 0;
set nbHighPair_First 0; set nbHighPair_Second 0;
set nbLowPairWthRng_First 0; set nbLowPairWthRng_Second 0;
set nbLowPairWthMotCouplAndRng_First 0; set nbLowPairWthMotCouplAndRng_Second 0;
set nbHighPairWthRng_First 0; set nbHighPairWthRange_Second 0;
# Kinematic States
set nbState_First 0; set nbState_Second 0;
# Kinematic Values
set nbLowPairVls_First 0; set nbLowPairVls_Second 0;
set nbLowPairWthMotCouplVls_First 0; set nbLowPairWthMotCouplVls_Second 0;
set nbHighPairVls_First 0; set nbHighPairVls_Second 0;
###################################################################
set ref_Compare 0
set todo_msg ""
set todo_mask "puts \"TODO CR31388 ALL: "
set end_line "\" \n"
##################################################################

# Read original file
if { [string length $filename] > 1} {
  set path_file [locate_data_file $filename]
  if { [catch { ReadStep D_First $path_file } catch_result] } {
    set err_msg "Error: First - file was not read - exception "
    puts $err_msg
    append todo_msg $todo_mask $err_msg $end_line
    set mist 1
  }
} else {
  set mist 1
}

# Get information about kinematics
if { $mist < 1} {           
  puts ""
  set xst [ XDumpKinematics D_First] 

  if { [llength $xst] > 0 } {
    regexp {NbOfMechanisms +: +[(] +([-0-9.+eE]+) +[)]} $xst full nbMechanism_First
    regexp {NbOfKinematicLinks +: +[(] +([-0-9.+eE]+) +[)]} $xst full nbLink_First
    regexp {NbOfRefShapes +: +[(] +([-0-9.+eE]+) +[)]} $xst full nbRefShape_First
    regexp {KinematicPairsWithoutRange +: +NbOfLowOrderPairs +[(] +([-0-9.+eE]+) +[)] +NbOfLowOrderPairsWithMotionCoupling +[(] +([-0-9.+eE]+) +[)] +NbOfHightOrderPairs +[(] +([-0-9.+eE]+) +[)]} $xst full nbLowPair_First nbLowPairWthMotCoupl_First nbHighPair_First 
    regexp {KinematicPairsWithRange +: +NbOfLowOrderPairs +[(] +([-0-9.+eE]+) +[)] +NbOfLowOrderPairsWithMotionCoupling +[(] +([-0-9.+eE]+) +[)] +NbOfHightOrderPairs +[(] +([-0-9.+eE]+) +[)]} $xst full nbLowPairWthRng_First nbLowPairWthMotCouplAndRng_First nbHighPairWthRng_First
    regexp {NbOfStates +: +[(] +([-0-9.+eE]+) +[)]} $xst full nbState_First
    regexp {KinematicValues +: +NbOfLowOrderPairs +[(] +([-0-9.+eE]+) +[)] +NbOfLowOrderPairsWithMotionCoupling +[(] +([-0-9.+eE]+) +[)] +NbOfHightOrderPairs +[(] +([-0-9.+eE]+) +[)]} $xst full nbLowPairVls_First nbLowPairWthMotCouplVls_First nbHighPairVls_First
  } else {
      puts " Kinematics information was NOT provided"
    }
}

if { $mist != 1 } {  
  puts "" 
  set result ""
  append result [format $xst]
}

# Writing file
if { $mist < 1} {
  puts " "
  puts "-----------------------------WRITING FILE ------------------------------"
  if { [catch { WriteStep D_First $imagedir/${casename}_D_First.stp } catch_result] } {
    set err_msg "Error: First - file was not written - exception"
    puts $err_msg
    append todo_msg $todo_mask $err_msg $end_line
    set mist 1
  }
  if { $mist < 1 } {
    if { [catch { ReadStep D_Second $imagedir/${casename}_D_First.stp } catch_result] } {
      set err_msg "Error: Second - file was not read - exception"
      puts $err_msg
      append todo_msg $todo_mask $err_msg $end_line
      set mist 1
    }
  }
}

catch {[file delete $imagedir/${casename}_D_First.stp]}
if { [catch { Close D_First } catch_result] } {
  set err_msg "Error : cannot close a document D_First - exception"
  puts $err_msg
}

# Get information about kinematics
if { $mist < 1} {           
  puts ""
  set xst2 [ XDumpKinematics D_Second]

  if { [llength $xst2] > 0 } {
    regexp {NbOfMechanisms +: +[(] +([-0-9.+eE]+) +[)]} $xst2 full nbMechanism_Second
    regexp {NbOfKinematicLinks +: +[(] +([-0-9.+eE]+) +[)]} $xst2 full nbLink_Second
    regexp {NbOfRefShapes +: +[(] +([-0-9.+eE]+) +[)]} $xst2 full nbRefShape_Secondt
    regexp {KinematicPairsWithoutRange +: +NbOfLowOrderPairs +[(] +([-0-9.+eE]+) +[)] +NbOfLowOrderPairsWithMotionCoupling +[(] +([-0-9.+eE]+) +[)] +NbOfHightOrderPairs +[(] +([-0-9.+eE]+) +[)]} $xst2 full nbLowPair_Second nbLowPairWthMotCoupl_Second nbHighPair_Second 
    regexp {KinematicPairsWithRange +: +NbOfLowOrderPairs +[(] +([-0-9.+eE]+) +[)] +NbOfLowOrderPairsWithMotionCoupling +[(] +([-0-9.+eE]+) +[)] +NbOfHightOrderPairs +[(] +([-0-9.+eE]+) +[)]} $xst2 full nbLowPairWthRng_Second nbLowPairWthMotCouplAndRng_Second nbHighPairWthRng__Second
    regexp {NbOfStates +: +[(] +([-0-9.+eE]+) +[)]} $xst2 full nbState_Second
    regexp {KinematicValues +: +NbOfLowOrderPairs +[(] +([-0-9.+eE]+) +[)] +NbOfLowOrderPairsWithMotionCoupling +[(] +([-0-9.+eE]+) +[)] +NbOfHightOrderPairs +[(] +([-0-9.+eE]+) +[)]} $xst2 full nbLowPairVls_Second nbLowPairWthMotCouplVls_Second nbHighPairVls_Second
  } else {
      puts " Kinematics information was NOT provided"
    }
  if { [catch { Close D_Second } catch_result] } {
    set err_msg "Error : cannot close a document D_Second - exception"
    puts $err_msg
  }
}

if { $mist != 1 } {  
  puts "" 
  set result2 ""
  append result2 [format $xst2]
}
set err_compare_ref ""
# Put reference data to the test script file if option "dump" is set
if { $dump_file == 1 } { 
  set fd_stream  [open $dirname/$groupname/$gridname/$casename w] 
  puts $fd_stream "# !!!! This file is generated automatically, do not edit manually! See end script"
  puts $fd_stream "set filename $filename"
  if { $mist != 1 } {
    puts $fd_stream "" 
    puts $fd_stream "set ref_data \{"
    puts $fd_stream $result
    puts $fd_stream "\}"
  }
  close $fd_stream 
} elseif { $mist != 1 } {
  puts "========================== Comparision with reference data ========"
  puts ""
  # Comparision of reference data with obtained result
  set ref_list [split $ref_data \n]
  set cur_list [split $result \n]
  set cur2_list [split $result2 \n]
  set nb_ref [llength $ref_list]
  for { set i 0 } { $i < $nb_ref } { incr i } {
    set j [expr $i +1]
    set refstr [lindex $ref_list $j]
    set curstr [lindex $cur_list $i]
    set cur2str [lindex $cur2_list $i]
    set isOK 1; 

    if {[string equal $refstr $curstr] == 0} {
      set isOK 0 
    }
    
    if {[string equal $curstr $cur2str] == 0} {
      set isOK 0 
    } 

    if { $isOK == 0}  {
      incr ref_Compare
      append err_compare_ref " Reference data             - $refstr\n"
      append err_compare_ref " Current data               - $curstr\n"
      append err_compare_ref " Current data after writing - $cur2str\n"
      append err_compare_ref "--------------------------------------------------------------------\n"
    }
  }
}

if { $dump_file != 0 } {
    puts "Error : Running in regeneration mode, comparision was not performed!"
    if { $mist != 1 } {
      	 puts "Generation of test file $groupname/$gridname/$casename successful"
    } else {
      	 puts "Generation of reference data failed"
    }
} else {
    if { $ref_Compare > 0} {
        puts "Error : $ref_Compare differences with reference data found :\n$err_compare_ref"
    } else {
        puts "Comparision of current result with reference data - OK\n"
    }    
}

puts "--------------------------------------------------------------------"
puts ""

puts "TEST COMPLETED"
