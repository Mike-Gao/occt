#==============================
# Test scenario for kinematics
#==============================

 ReadStep D [locate_data_file as1-oc-214.stp]
# Load document with shape structure
# ReadStep D C:/Work/files/as1.stp
# Add parent mechanism
set mech [XAddMechanism D]

# Add several Links
set link1 [XAddLink D $mech 0:1:1:2:3]
set ref_shapes1 [XGetRefShapes D $link1]
if {$ref_shapes1 != "0:1:1:2:3 "} {
  puts "Error: wrong kinematic graph structure."
}
set link2 [XAddLink D 0:1:11:1]
XSetLink D $link2 0:1:1:2:1 0:1:1:2:2
set ref_shapes2 [XGetRefShapes D $link2]
if {$ref_shapes2 != "0:1:1:2:1 0:1:1:2:2 "} {
  puts "Error: wrong kinematic graph structure."
}
set link3 [XAddLink D $mech 0:1:1:3]
set result [XIsLink D $link3]
if {$result == 0} {
  puts "Error: wrong kinematic graph structure."
}
set link4 [XAddLink D $mech 0:1:1:7]
XRemoveLink D $link4
set result [XIsLink D $link4]
if {$result == 1} {
  puts "Error: wrong kinematic graph structure."
}

# Add several Joints
set joint1 [XAddJoint D $mech $link1 $link2]
set result [XIsJoint D $joint1]
if {$result == 0} {
  puts "Error: wrong kinematic graph structure."
}
set ref_links1 [XGetLinksOfJoint D $joint1]
if {$ref_links1 != "0:1:11:1:1:1 0:1:11:1:1:2"} {
  puts "Error: wrong kinematic graph structure."
}
XSetPairType D $joint1 3
set result [XGetPairType D $joint1]
if {$result != 3} {
  puts "Error: wrong kinematic pair data."
}
XSetPairName D $joint1 Low order
set result [XGetPairName D $joint1]
if {$result != "Low order"} {
  puts "Error: wrong kinematic pair data."
}
plane p1 10 20 30 -1 0 0 
plane p2 10 0 0 1 0 0 0 1 0 
XSetPairTransformation D $joint1 1 p1
set dump_in [dump p1]
XGetPairTransformation D $joint1 1 p1
set dump_out [dump p1]
if {$dump_in != $dump_out} {
  puts "Error: wrong kinematic pair data."
}
XSetPairTransformation D $joint1 2 p2
set dump_in [dump p2]
XGetPairTransformation D $joint1 2 p2
set dump_out [dump p2]
if {$dump_in != $dump_out} {
  puts "Error: wrong kinematic pair data."
}
XSetPairLimits D $joint1 0 0 0 0 0 0 0 100 0 0 0 0
set limits [XGetPairLimits D $joint1]
if {$limits != "0 0 0 0 0 0 0 100 0 0 0 0 "} {
  puts "Error: wrong kinematic pair data."
}

set joint2 [XAddJoint D 0:1:11:1]
XSetJoint D $joint2 $link1 $link3
set ref_links2 [XGetLinksOfJoint D $joint2]
if {$ref_links2 != "0:1:11:1:1:1 0:1:11:1:1:3"} {
  puts "Error: wrong kinematic graph structure."
}
set ref_joints [XGetJointsOfLink D 0:1:11:1:1:1]
if {$ref_joints != "0:1:11:1:2:1 0:1:11:1:2:2 "} {
  puts "Error: wrong kinematic graph structure."
}
XSetPairType D $joint2 13
XSetPairName D $joint2 Low order with motion coupling
XSetPairLimits D $joint2 0 60
set limits [XGetPairLimits D $joint2]
if {$limits != "0 60 "} {
  puts "Error: wrong kinematic pair data."
}
XSetPairParams D $joint2 1 2 3 4 5
set params [XGetPairParams D $joint2]
if {[lindex $params 4] != "1"} {
  puts "Error: wrong kinematic pair data."
}
if {[lindex $params 9] != "2"} {
  puts "Error: wrong kinematic pair data."
}
if {[lindex $params 12] != "3"} {
  puts "Error: wrong kinematic pair data."
}
if {[lindex $params 16] != "4"} {
  puts "Error: wrong kinematic pair data."
}
if {[lindex $params 20] != "5"} {
  puts "Error: wrong kinematic pair data."
}

set joint3 [XAddJoint D $mech $link3 $link2]
XSetPairType D $joint3 16
XSetPairName D $joint3 High order surface
sphere sph 4 4 4 1
set dump_in [dump sph]
XSetPairGeomParam D $joint3 1 sph
XGetPairGeomParam D $joint3 1 sph
set dump_out [dump sph]
if {$dump_in != $dump_out} {
  puts "Error: wrong kinematic pair data."
}
XSetPairLimits D $joint3 30 60
cylinder cyl 0 0 0 0 1 0 2
trim cyl cyl 0 2 0 2
set dump_in [dump cyl]
mkface fcyl cyl
XSetPairGeomParam D $joint3 2 fcyl
XGetPairGeomParam D $joint3 2 cyl
set dump_out [dump cyl]
if {$dump_in != $dump_out} {
  puts "Error: wrong kinematic pair data."
}

set joint4 [XAddJoint D $mech $link3 0:1:11:1:1:1]
XSetPairType D $joint4 18
XSetPairName D $joint4 High order curve
circle cir 0 0 0 3
set dump_in [dump cir]
XSetPairGeomParam D $joint4 1 cir
XGetPairGeomParam D $joint4 1 cir
set dump_out [dump cir]
if {$dump_in != $dump_out} {
  puts "Error: wrong kinematic pair data."
}
mkedge ecir cir
XSetPairGeomParam D $joint4 1 ecir
XGetPairGeomParam D $joint4 1 cir
set dump_out [dump cir]
if {$dump_in != $dump_out} {
  puts "Error: wrong kinematic pair data."
}

Close D
